# Required env: PROFILE_DIR
# Required matrix vectors: pkg
# Required hooks:
# hooks:
#   before:
#   - shell: mkdir -p ${PROFILE_DIR}
  # after:success:
  # - shell: go tool pprof ${PROFILE_DIR}/mem.out

path@tpl: ./{{- matrix.pkg -}}
json_output_file@tpl: |-
  {{- if matrix.pkg -}}
    {{- env.PROFILE_DIR -}}/result-{{ matrix.pkg | strings.KebabCase }}.json
  {{- else -}}
    {{- env.PROFILE_DIR -}}/result.json
  {{- end -}}

verbose: true
panic_on_exit_0: true

profile:
  output_dir@env: ${PROFILE_DIR}
  coverage:
    enabled: true
    output@tpl: |-
      {{- if matrix.pkg -}}
        coverage.{{ matrix.pkg | strings.KebabCase }}.txt
      {{- else -}}
        coverage.txt
      {{- end -}}
    packages@:
    - __@tpl: ./{{- matrix.pkg -}}

  memory:
    enabled: true
    output@tpl: |-
      {{- if matrix.pkg -}}
        memory.{{ matrix.pkg | strings.KebabCase }}.out
      {{- else -}}
        memory.out
      {{- end -}}

  cpu:
    enabled: true
    output@tpl: |-
      {{- if matrix.pkg -}}
        cpu.{{ matrix.pkg | strings.KebabCase }}.out
      {{- else -}}
        cpu.out
      {{- end -}}

  mutex:
    enabled: true
    output@tpl: |-
      {{- if matrix.pkg -}}
        mutex.{{ matrix.pkg | strings.KebabCase }}.out
      {{- else -}}
        mutex.out
      {{- end -}}

  block:
    enabled: true
    output@tpl: |-
      {{- if matrix.pkg -}}
        block.{{ matrix.pkg | strings.KebabCase }}.out
      {{- else -}}
        block.out
      {{- end -}}

  trace:
    enabled: true
    output@tpl: |-
      {{- if matrix.pkg -}}
        trace.{{ matrix.pkg | strings.KebabCase }}.out
      {{- else -}}
        trace.out
      {{- end -}}
