# Optional global values:
#   - cmd.run_container: an array of strings representing equivalent cli command as `docker run`
#
# Optional matrix vectors:
#   - go_version: golang toolchain version
#
# Optional env:
#   - GO_VERSION: same as matrix.go_version, but as a fallback, if not set, use go1.17
#   - RUN_CONTAINER: same as `cmd.run_container`, but in space separated cmd list env value form
#                    will be used when `cmd.run_container` is empty or not defined
#
#   - VOLUME_NAME: name of docker volume or absolute local path for caching go modules in container `/go/pkg/mod`
#   - WORKING_DIR: for switching to directory different from DUKKHA_WORKING_DIR
#   - IMAGE to override default golang image
#   - IMAGE_FLAVOR set which type of golang image to use, only effective when IMAGE is not set
#       possible values:
#        - native (alias of alpine-native)
#        - alpine-native (default, use same arch image as host arch, no cross gcc toolchain, alpine based)
#        - debian-navive (same as alpine-native, but based on debian)
#
#        - cross (alias of alpine-cross)
#        - alpine-cross (use same arch image as host arch, with cross gcc, alpine based
#             when matrix.arch is not supported by alpine, automatically use debian based image
#             if no cross toolchain for host_arch, fallback to qemu mode
#        - debian-cross (same as alpine-cross, but debian based)
#
#        - qemu (alias of alpine-qemu)
#        - alpine-qemu (use target matrix.arch image, should have qemu-static configured in host)
#             when matrix.arch is not supported by alpine, automatically use debian based image
#        - debian-qemu (same as alpine-qemu, but debian based)

cmd@template: |-
  {{- $flavor := env.IMAGE_FLAVOR | default "native" -}}
  {{- $ver := matrix.go_version | default env.GO_VERSION | default "1.17" -}}
  {{- $arch := trimSuffix "sf" (default env.HOST_ARCH matrix.arch) -}}
  {{- $host_arch := trimSuffix "sf" (default "amd64" env.HOST_ARCH) -}}
  {{- $cgo := eq env.CGO_ENABLED "1" "true" -}}

  {{- $tag := "" -}}
  {{- if eq $flavor "" "native" "alpine-native" -}}

    {{- $tag = printf "%s-alpine" $ver -}}

  {{- else if eq $flavor "debian-native" -}}

    {{- $tag = printf "%s-debian" $ver -}}

  {{- else if eq $flavor "cross" "alpine-cross" -}}

    {{- $host_arch := env.HOST_ARCH -}}
    {{- if and (and
          $cgo (ne env.HOST_ARCH $arch)
        )
        (not (eq env.HOST_ARCH "amd64")) -}}
      {{- $host_arch = $arch -}}
    {{- end -}}

    {{- if eq $arch "armv5" "mips64le" -}}
      {{- if and (and
            $cgo (ne env.HOST_ARCH $arch)
          )
          (not (eq env.HOST_ARCH "amd64" "arm64")) -}}
        {{- $host_arch = $arch -}}
      {{- end -}}
      {{- $tag = printf "%s-debian-%s-%s" $ver $host_arch $arch -}}
    {{- else -}}
      {{- $tag = printf "%s-alpine-%s-%s" $ver $host_arch $arch -}}
    {{- end -}}

  {{- else if eq $flavor "debian-cross" -}}

    {{- $host_arch := env.HOST_ARCH -}}
    {{- if and (and
          $cgo (ne env.HOST_ARCH $arch)
        )
        (not (eq env.HOST_ARCH "amd64" "arm64")) -}}
      {{- $host_arch = $arch -}}
    {{- end -}}

    {{- if eq $arch "armv6" -}}
      {{- if and (and
            $cgo (ne env.HOST_ARCH $arch)
          )
          (not (eq env.HOST_ARCH "amd64")) -}}
        {{- $host_arch = $arch -}}
      {{- end -}}
      {{- $tag = printf "%s-alpine-%s-%s" $ver $host_arch $arch -}}
    {{- else -}}
      {{- $tag = printf "%s-debian-%s-%s" $ver $host_arch $arch -}}
    {{- end -}}

  {{- else if eq $flavor "qemu" "alpine-qemu" -}}

    {{- if eq $arch "armv5" "mips64le" -}}
      {{- $tag = printf "%s-debian-%s" $ver $arch -}}
    {{- else -}}
      {{- $tag = printf "%s-alpine-%s" $ver $arch -}}
    {{- end -}}

  {{- else if eq $flavor "debian-qemu" -}}

    {{- if eq $arch "armv6" -}}
      {{- $tag = printf "%s-alpine-%s" $ver $arch -}}
    {{- else -}}
      {{- $tag = printf "%s-debian-%s" $ver $arch -}}
    {{- end -}}

  {{- end -}}

  {{- $image := env.IMAGE | default (printf "ghcr.io/arhat-dev/builder-golang:%s" $tag) -}}
  {{- $run_container := values.cmd.run_container }}
  {{- if not $run_container -}}
    {{- $run_container = strings.Split " " (default "docker run -t" env.RUN_CONTAINER) -}}
  {{- end }}
  {{- range $_, $v := $run_container }}
    {{- if $v }}
  - {{ $v }}
    {{- end }}
  {{- end }}
    {{- if env.VOLUME_NAME }}
  - -v
  - {{ env.VOLUME_NAME -}}:/go/pkg/mod
    {{- end }}
  - --workdir
  - {{ env.WORKING_DIR | default env.DUKKHA_WORKING_DIR }}
  - -v
  - {{ env.DUKKHA_WORKING_DIR -}}:{{- env.DUKKHA_WORKING_DIR }}

  {{- /* start of go language specific settings */}}

    {{- if env.GOFLAGS }}
  - -e
  - GOFLAGS={{- env.GOFLAGS | default "" }}
    {{- end }}

    {{- if env.GIT_ALLOW_PROTOCOL }}
  - -e
  - GIT_ALLOW_PROTOCOL={{- env.GIT_ALLOW_PROTOCOL | default "" }}
    {{- end }}

    {{- if env.GO_EXTLINK_ENABLED }}
  - -e
  - GO_EXTLINK_ENABLED={{- env.GO_EXTLINK_ENABLED | default "" }}
    {{- end }}

    {{- if env.GOGCCFLAGS }}
  - -e
  - GOGCCFLAGS={{- env.GOGCCFLAGS | default "" }}
    {{- end }}

    {{- if env.GOEXPERIMENT }}
  - -e
  - GOEXPERIMENT={{- env.GOEXPERIMENT | default "" }}
    {{- end }}

    {{- if env.GOEXE }}
  - -e
  - GOEXE={{- env.GOEXE | default "" }}
    {{- end }}

  {{- /* end of go language specific settings */}}

  {{- /* start of go module related settings */}}

  # always use gomod
  - -e
  - GO111MODULE=on

    {{- if env.GOINSECURE }}
  - -e
  - GOINSECURE={{- env.GOINSECURE | default "" }}
    {{- end }}

    {{- if env.GOINSECURE }}
  - -e
  - GOPRIVATE={{- env.GOPRIVATE | default "" }}
    {{- end }}

    {{- if env.GOPROXY }}
  - -e
  - GOPROXY={{- env.GOPROXY | default "" }}
    {{- end }}

    {{- if env.GOSUMDB }}
  - -e
  - GOSUMDB={{- env.GOSUMDB | default "" }}
    {{- end }}

    {{- if env.GONOSUMDB }}
  - -e
  - GONOSUMDB={{- env.GONOSUMDB | default "" }}
    {{- end }}

    {{- if env.GONOPROXY }}
  - -e
  - GONOPROXY={{- env.GONOPROXY | default "" }}
    {{- end }}

  {{- /* end of go module proxy related settings */}}

  {{- /* start of GOOS/GOARCH related settings */}}

  # always set GOOS and GOARCH
  - -e
  - GOOS={{- env.GOOS | default "" }}
  - -e
  - GOARCH={{- env.GOARCH | default "" }}

    {{- if or (eq env.GOOS "386") env.GO386 }}
  - -e
  - GO386={{- env.GO386 | default "" }}
    {{- end }}

    {{- if or (eq env.GOOS "amd64") env.GOAMD64 }}
  - -e
  - GOAMD64={{- env.GOAMD64 | default "" }}
    {{- end }}

    {{- if or (eq env.GOOS "arm") env.GOARM }}
  - -e
  - GOARM={{- env.GOARM | default "" }}
    {{- end }}

    {{- if or (eq env.GOOS "mips" "mipsle") env.GOMIPS }}
  - -e
  - GOMIPS={{- env.GOMIPS | default "" }}
    {{- end }}

    {{- if or (eq env.GOOS "mips64" "mips64le") env.GOMIPS64 }}
  - -e
  - GOMIPS64={{- env.GOMIPS64 | default "" }}
    {{- end }}

    {{- if or (eq env.GOOS "js") env.GOWASM }}
  - -e
  - GOWASM={{- env.GOWASM | default "" }}
    {{- end }}

    {{- if or (eq env.GOOS "ppc64" "ppc64le") env.GOPPC64 }}
  - -e
  - GOPPC64={{- env.GOPPC64 | default "" }}
    {{- end }}

  {{- /* end of GOOS & GOARCH related settings */}}

  {{- /* start of cgo related settings */}}

    {{- if env.CC }}
  - -e
  - CC={{- env.CC | default "" }}
    {{- end }}

    {{- if env.CXX }}
  - -e
  - CXX={{- env.CXX | default "" }}
    {{- end }}

    {{- if env.AR }}
  - -e
  - AR={{- env.AR | default "" }}
    {{- end }}

    {{- if env.FC }}
  - -e
  - FC={{- env.FC | default "" }}
    {{- end }}

    {{- if env.PKG_CONFIG }}
  - -e
  - PKG_CONFIG={{- env.PKG_CONFIG | default "" }}
    {{- end }}

    {{- if env.CGO_ENABLED }}
  - -e
  - CGO_ENABLED={{- env.CGO_ENABLED | default "0" }}
    {{- end }}

    {{- if env.CGO_CPPFLAGS_ALLOW }}
  - -e
  - CGO_CPPFLAGS_ALLOW={{- env.CGO_CPPFLAGS_ALLOW | default "" }}
    {{- end }}

    {{- if env.CGO_CPPFLAGS_DISALLOW }}
  - -e
  - CGO_CPPFLAGS_DISALLOW={{- env.CGO_CPPFLAGS_DISALLOW | default "" }}
    {{- end }}

    {{- if env.CGO_CPPFLAGS }}
  - -e
  - CGO_CPPFLAGS={{- env.CGO_CPPFLAGS | default "" }}
    {{- end }}

    {{- if env.CGO_CFLAGS_ALLOW }}
  - -e
  - CGO_CFLAGS_ALLOW={{- env.CGO_CFLAGS_ALLOW | default "" }}
    {{- end }}

    {{- if env.CGO_CFLAGS_DISALLOW }}
  - -e
  - CGO_CFLAGS_DISALLOW={{- env.CGO_CFLAGS_DISALLOW | default "" }}
    {{- end }}

    {{- if env.CGO_CFLAGS }}
  - -e
  - CGO_CFLAGS={{- env.CGO_CFLAGS | default "" }}
    {{- end }}

    {{- if env.CGO_CXXFLAGS_ALLOW }}
  - -e
  - CGO_CXXFLAGS_ALLOW={{- env.CGO_CXXFLAGS_ALLOW | default "" }}
    {{- end }}

    {{- if env.CGO_CXXFLAGS_DISALLOW }}
  - -e
  - CGO_CXXFLAGS_DISALLOW={{- env.CGO_CXXFLAGS_DISALLOW | default "" }}
    {{- end }}

    {{- if env.CGO_CXXFLAGS }}
  - -e
  - CGO_CXXFLAGS={{- env.CGO_CXXFLAGS | default "" }}
    {{- end }}

    {{- if env.CGO_FFLAGS_ALLOW }}
  - -e
  - CGO_FFLAGS_ALLOW={{- env.CGO_FFLAGS_ALLOW | default "" }}
    {{- end }}

    {{- if env.CGO_FFLAGS_DISALLOW }}
  - -e
  - CGO_FFLAGS_DISALLOW={{- env.CGO_FFLAGS_DISALLOW | default "" }}
    {{- end }}

    {{- if env.CGO_FFLAGS }}
  - -e
  - CGO_FFLAGS={{- env.CGO_FFLAGS | default "" }}
    {{- end }}

    {{- if env.CGO_LDLAGS_ALLOW }}
  - -e
  - CGO_LDLAGS_ALLOW={{- env.CGO_LDLAGS_ALLOW | default "" }}
    {{- end }}

    {{- if env.CGO_LDLAGS_DISALLOW }}
  - -e
  - CGO_LDLAGS_DISALLOW={{- env.CGO_LDLAGS_DISALLOW | default "" }}
    {{- end }}

    {{- if env.CGO_LDLAGS }}
  - -e
  - CGO_LDLAGS={{- env.CGO_LDLAGS | default "" }}
    {{- end }}

  {{- /* end of cgo related settings */}}

  - --entrypoint
  - ""
  - {{ $image }}
  - go
