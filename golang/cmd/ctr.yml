{{- define "golang.cmd.ctr" -}}

{{- $version := var.version | default "1.18" -}}
{{- $flavor := var.flavor -}}
{{- if not $flavor -}}
  {{- if eq env.CGO_ENABLED "1" "true" -}}
    {{- $flavor = "cross" -}}
  {{- else -}}
    {{- $flavor = "native" -}}
  {{- end -}}
{{- end -}}

{{- $flavor_tag := include "image.flavored-tag"
  (dict
    "flavor" (default "native" var.flavor)
    "arch" (var.arch | default matrix.arch | default var.host_arch | default "amd64")
    "host_arch" var.host_arch
  )
-}}

{{- $image := var.image
    | default (
        printf "ghcr.io/arhat-dev/builder-golang:%s-%s"
        $version $flavor_tag
      )
-}}

{{- $run_ctr := var.run_ctr
    | default values.cmd.run_ctr
    | default (strings.Split "," "docker,run")
-}}

{{- range $_, $v := $run_ctr }}
- {{ $v }}
{{- end }}

  {{- if var.volume }}
- -v
- {{ var.volume -}}:/go/pkg/mod
  {{- end }}

- --workdir
- {{ var.workdir | default dukkha.WorkDir }}

- -v
- {{ dukkha.WorkDir -}}:{{- dukkha.WorkDir }}

{{- /* start of go language specific settings */}}

  {{- if env.GOFLAGS }}
- -e
- GOFLAGS={{- env.GOFLAGS | default "" }}
  {{- end }}

  {{- if env.GIT_ALLOW_PROTOCOL }}
- -e
- GIT_ALLOW_PROTOCOL={{- env.GIT_ALLOW_PROTOCOL | default "" }}
  {{- end }}

  {{- if env.GO_EXTLINK_ENABLED }}
- -e
- GO_EXTLINK_ENABLED={{- env.GO_EXTLINK_ENABLED | default "" }}
  {{- end }}

  {{- if env.GOGCCFLAGS }}
- -e
- GOGCCFLAGS={{- env.GOGCCFLAGS | default "" }}
  {{- end }}

  {{- if env.GOEXPERIMENT }}
- -e
- GOEXPERIMENT={{- env.GOEXPERIMENT | default "" }}
  {{- end }}

  {{- if env.GOEXE }}
- -e
- GOEXE={{- env.GOEXE | default "" }}
  {{- end }}

{{- /* end of go language specific settings */}}

{{- /* start of go module related settings */}}

# always use go module (if available, >= go1.11)

- -e
- GO111MODULE=on

  {{- if env.GOINSECURE }}
- -e
- GOINSECURE={{- env.GOINSECURE | default "" }}
  {{- end }}

  {{- if env.GOINSECURE }}
- -e
- GOPRIVATE={{- env.GOPRIVATE | default "" }}
  {{- end }}

  {{- if env.GOPROXY }}
- -e
- GOPROXY={{- env.GOPROXY | default "" }}
  {{- end }}

  {{- if env.GOSUMDB }}
- -e
- GOSUMDB={{- env.GOSUMDB | default "" }}
  {{- end }}

  {{- if env.GONOSUMDB }}
- -e
- GONOSUMDB={{- env.GONOSUMDB | default "" }}
  {{- end }}

  {{- if env.GONOPROXY }}
- -e
- GONOPROXY={{- env.GONOPROXY | default "" }}
  {{- end }}

{{- /* end of go module proxy related settings */}}

{{- /* start of GOOS/GOARCH related settings */}}

# always set GOOS and GOARCH

- -e
- GOOS={{- env.GOOS | default (host.kernel | archconv.GolangOS) }}

- -e
- GOARCH={{- env.GOARCH | default (host.arch | archconv.GolangArch) }}

  {{- if env.GO386 }}
- -e
- GO386={{- env.GO386 }}
  {{- end }}

  {{- if env.GOAMD64 }}
- -e
- GOAMD64={{- env.GOAMD64 }}
  {{- end }}

  {{- if env.GOARM }}
- -e
- GOARM={{- env.GOARM }}
  {{- end }}

  {{- if env.GOMIPS }}
- -e
- GOMIPS={{- env.GOMIPS }}
  {{- end }}

  {{- if env.GOMIPS64 }}
- -e
- GOMIPS64={{- env.GOMIPS64 }}
  {{- end }}

  {{- if env.GOWASM }}
- -e
- GOWASM={{- env.GOWASM }}
  {{- end }}

  {{- if env.GOPPC64 }}
- -e
- GOPPC64={{- env.GOPPC64 }}
  {{- end }}

{{- /* end of GOOS & GOARCH related settings */}}

{{- /* start of cgo related settings */}}

  {{- if env.CC }}
- -e
- CC={{- env.CC | default "" }}
  {{- end }}

  {{- if env.CXX }}
- -e
- CXX={{- env.CXX | default "" }}
  {{- end }}

  {{- if env.AR }}
- -e
- AR={{- env.AR | default "" }}
  {{- end }}

  {{- if env.FC }}
- -e
- FC={{- env.FC | default "" }}
  {{- end }}

  {{- if env.PKG_CONFIG }}
- -e
- PKG_CONFIG={{- env.PKG_CONFIG | default "" }}
  {{- end }}

  {{- if env.CGO_ENABLED }}
- -e
- CGO_ENABLED={{- env.CGO_ENABLED | default "0" }}
  {{- end }}

  {{- if env.CGO_CPPFLAGS_ALLOW }}
- -e
- CGO_CPPFLAGS_ALLOW={{- env.CGO_CPPFLAGS_ALLOW | default "" }}
  {{- end }}

  {{- if env.CGO_CPPFLAGS_DISALLOW }}
- -e
- CGO_CPPFLAGS_DISALLOW={{- env.CGO_CPPFLAGS_DISALLOW | default "" }}
  {{- end }}

  {{- if env.CGO_CPPFLAGS }}
- -e
- CGO_CPPFLAGS={{- env.CGO_CPPFLAGS | default "" }}
  {{- end }}

  {{- if env.CGO_CFLAGS_ALLOW }}
- -e
- CGO_CFLAGS_ALLOW={{- env.CGO_CFLAGS_ALLOW | default "" }}
  {{- end }}

  {{- if env.CGO_CFLAGS_DISALLOW }}
- -e
- CGO_CFLAGS_DISALLOW={{- env.CGO_CFLAGS_DISALLOW | default "" }}
  {{- end }}

  {{- if env.CGO_CFLAGS }}
- -e
- CGO_CFLAGS={{- env.CGO_CFLAGS | default "" }}
  {{- end }}

  {{- if env.CGO_CXXFLAGS_ALLOW }}
- -e
- CGO_CXXFLAGS_ALLOW={{- env.CGO_CXXFLAGS_ALLOW | default "" }}
  {{- end }}

  {{- if env.CGO_CXXFLAGS_DISALLOW }}
- -e
- CGO_CXXFLAGS_DISALLOW={{- env.CGO_CXXFLAGS_DISALLOW | default "" }}
  {{- end }}

  {{- if env.CGO_CXXFLAGS }}
- -e
- CGO_CXXFLAGS={{- env.CGO_CXXFLAGS | default "" }}
  {{- end }}

  {{- if env.CGO_FFLAGS_ALLOW }}
- -e
- CGO_FFLAGS_ALLOW={{- env.CGO_FFLAGS_ALLOW | default "" }}
  {{- end }}

  {{- if env.CGO_FFLAGS_DISALLOW }}
- -e
- CGO_FFLAGS_DISALLOW={{- env.CGO_FFLAGS_DISALLOW | default "" }}
  {{- end }}

  {{- if env.CGO_FFLAGS }}
- -e
- CGO_FFLAGS={{- env.CGO_FFLAGS | default "" }}
  {{- end }}

  {{- if env.CGO_LDLAGS_ALLOW }}
- -e
- CGO_LDLAGS_ALLOW={{- env.CGO_LDLAGS_ALLOW | default "" }}
  {{- end }}

  {{- if env.CGO_LDLAGS_DISALLOW }}
- -e
- CGO_LDLAGS_DISALLOW={{- env.CGO_LDLAGS_DISALLOW | default "" }}
  {{- end }}

  {{- if env.CGO_LDLAGS }}
- -e
- CGO_LDLAGS={{- env.CGO_LDLAGS | default "" }}
  {{- end }}

{{- /* end of cgo related settings */}}

- --entrypoint
- ""
- "{{ $image }}"
- go

{{- end -}}
